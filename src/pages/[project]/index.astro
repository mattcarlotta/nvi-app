---
import type { Environments, Project } from "../../types/";
import EnvironmentList from "../../components/layout/EnvironmentList";
import LoginForm from "../../components/forms/LoginForm";
import NavBar from "../../components/layout/NavBar.astro";
import MainLayout from "../../layouts/main.astro";
import { fetchAPIGET } from "../../utils/fetchAPI";

const sessionToken = Astro.cookies.get("SESSION_TOKEN");
const headers = new Headers();
headers.append("Cookie", `SESSION_TOKEN=${sessionToken?.value}`);

let userName = "";
let project: Project | null = null;
let environments: Environments = [];
try {
    const userRes = await fetchAPIGET({
        url: "/loggedin/",
        headers,
    });

    if (!userRes.data?.name) {
        throw Error("Not logged in");
    }

    userName = userRes.data.name;

    const res = await fetchAPIGET({
        url: `/environments/project/${Astro.params.project}`,
        headers,
    });

    project = res.data?.project || null;

    environments = res.data?.environments || [];
} catch {
    // handles errors below
}
---

<MainLayout description={project ? project.name : "project not found"}>
    <NavBar userName={userName} slot="navbar" />
    {
        !userName ? (
            <LoginForm client:load reloadPage />
        ) : project ? (
            <>
                <div class="flex items-center space-x-2 text-3xl mb-2">
                    <a
                        class="block text-blue-500 hover:underline"
                        href="/dashboard/"
                    >
                        dashboard
                    </a>
                    <div class="text-2xl">&#187;</div>
                    <h1
                        title={project.name}
                        class="font-bold text-ellipsis overflow-hidden max-w-[20rem]"
                    >
                        {project.name}
                    </h1>
                </div>
                <EnvironmentList
                    client:load
                    projectName={project.name}
                    projectID={project.id}
                    environments={environments}
                />
            </>
        ) : (
            <h1>Project Not Found</h1>
        )
    }
</MainLayout>
