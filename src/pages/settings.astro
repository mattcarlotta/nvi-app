---
import type { User } from "../types";
import LoginForm from "../components/forms/LoginForm";
import UpdateDisplayNameForm from "../components/forms/UpdateDisplayNameForm";
import SettingsIcon from "../components/icons/SettingsIcon";
import CopyAPIKeyButton from "../components/layout/CopyAPIKeyButton";
import DeleteAccountButton from "../components/layout/DeleteAccountButton";
import ExternalLink from "../components/layout/ExternalLink.astro";
import LogoutButton from "../components/layout/LogoutButton";
import NavBar from "../components/layout/NavBar.astro";
import MainLayout from "../layouts/main.astro";
import { fetchAPIGET } from "../utils/fetchAPI";
import relativeTimeFromNow, { humanReadableDate } from "../utils/timeSince";

const sessionToken = Astro.cookies.get("SESSION_TOKEN");
let user: User | null = null;
try {
    const headers = new Headers();
    headers.append("Cookie", `SESSION_TOKEN=${sessionToken?.value}`);
    const res = await fetchAPIGET({
        url: "/loggedin/",
        headers,
    });

    if (!res.data) {
        throw new Error("Not logged in!");
    }

    user = res.data;
} catch {
    // handle errors below
}
---

<MainLayout description="settings">
    <NavBar email={user?.email} userName={user?.name} slot="navbar" />
    {
        !user?.name ? (
            <LoginForm client:load reloadPage />
        ) : (
            <>
                <div class="flex">
                    <h1 class="text-3xl mb-2">
                        <SettingsIcon class="w-6 h-6 fill-gray-100 inline" />
                        <span class="px-1">settings</span>
                    </h1>
                    <LogoutButton client:load className="text-sm text-blue-500 hover:underline">
                        &#40;logout&#41;
                    </LogoutButton>
                </div>
                <div class="flex flex-col space-y-4">
                    <section class="space-y-4 bg-gray-900 border border-gray-800 rounded p-4">
                        <header>
                            <h2 id="email" class="text-2xl">
                                email
                            </h2>
                        </header>
                        <label class="block" html-for="email">
                            Updating your email address has been
                            <strong class="underline text-red-500">disabled</strong> during the
                            beta.
                        </label>
                        <input
                            id="email"
                            class="cursor-not-allowed w-full max-w-[15rem] rounded px-2 py-2.5 text-gray-600 bg-gray-400"
                            value={user.email}
                            readonly
                            disabled
                        />
                        <div class="border-t border-t-gray-700 py-2">
                            <p>
                                Registered
                                <time
                                    title={user.createdAt}
                                    class="max-w-max"
                                    datetime={user.createdAt}
                                >
                                    {relativeTimeFromNow(user.createdAt)}&#32;
                                    <span class="text-xs">&#40;</span>
                                    <span class="text-xs">{humanReadableDate(user.createdAt)}</span>
                                    <span class="text-xs">&#41;</span>
                                </time>
                            </p>
                        </div>
                    </section>
                    <section class="space-y-4 bg-gray-900 border border-gray-800 rounded p-4">
                        <UpdateDisplayNameForm client:load name={user.name} />
                    </section>
                    <section class="space-y-4 bg-gray-900 border border-gray-800 rounded p-4">
                        <header>
                            <h2 id="api" class="text-2xl">
                                api
                            </h2>
                        </header>
                        <p>
                            Use this unique key to retrieve secrets from the nvi API using the
                            <ExternalLink
                                href="https://github.com/mattcarlotta/nvi"
                                title="nvi CLI tool"
                            />
                            .
                        </p>
                        <div class="bg-gray-800 p-2 border border-gray-700 rounded max-w-max">
                            <CopyAPIKeyButton client:load apiKey={user.apiKey} />
                        </div>
                        <div class="border-t border-t-gray-700 p-1">
                            <p class="mt-2">
                                Please refer to the
                                <ExternalLink
                                    href="https://github.com/mattcarlotta/nvi/wiki"
                                    title="nvi CLI wiki"
                                />
                                for more information.
                            </p>
                        </div>
                    </section>
                    <section class="space-y-4 bg-red-900 bg-opacity-30 border border-red-800 rounded p-4">
                        <header>
                            <h2 id="delete" class="text-2xl">
                                delete
                            </h2>
                        </header>
                        <p>
                            Permanently delete your account and all of its contents from the nvi
                            platforms. This action is
                            <strong class="underline text-red-500">irreversible</strong>, so
                            continue with caution.
                        </p>
                        <div class="border-t border-t-red-900 py-2">
                            <DeleteAccountButton client:load />
                        </div>
                    </section>
                </div>
            </>
        )
    }
</MainLayout>
